// Crea una stringa in formato ISO 8601 per la data e l'orario
const now = new Date();
const isoString = now.toISOString();
pm.collectionVariables.set("Date", isoString);

console.log("");
console.log("This is the pre request script of a modification message, generated at: " + pm.collectionVariables.get("Date") + " by " + pm.collectionVariables.get("NomeSoftware"));

// Crea un UUID per il Message Header
const MessageHeaderID = pm.variables.replaceIn("{{$randomUUID}}").toString();
pm.collectionVariables.set("MessageHeaderID", MessageHeaderID);
pm.collectionVariables.set("MessageHeaderFullUrl", "MessageHeader"+"/"+MessageHeaderID);
console.log("MessageHeaderID:", MessageHeaderID);

// Dichiara le informazioni sull'Ente
const CodiceApplicativo = "CodiceApplicativo_VSC"  
pm.collectionVariables.set("CodiceApplicativo", CodiceApplicativo);
const L1code = "L1code_VSC"   
pm.collectionVariables.set("L1code", L1code);
const L2code = "L2code_VSC"   
pm.collectionVariables.set("L2code", L2code);
const L3code = "L3code_VSC"   
pm.collectionVariables.set("L3code", L3code);
const L4code = "L4code_VSC"   
pm.collectionVariables.set("L4code", L4code);
const softwareName = "NomeSoftware_VSC"   
pm.collectionVariables.set("NomeSoftware", softwareName);

// Definisci la nuova richiesta che sostituirà la precedente

// Per prima cosa definiamo una lista di valori predefiniti per le Service Request e i relativi codici SISS
const serviceRequestList = ["Emocromo completo", "Insulina a digiuno", "Glicemia a digiuno", "Magnesio totale nelle urine", "Chetosteroidi nelle urine", "Cortisolo nel sangue"];
const SISSCodeList = ["90622", "90291", "90271", "90325", "90013", "90352"];

// Estraiamo le richieste precedentemente assegnate
const SR1SISS = pm.environment.get("SR1SISS")
const SR2SISS = pm.environment.get("SR2SISS")
const ServiceRequest1 = pm.environment.get("ServiceRequest1")
const ServiceRequest2 = pm.environment.get("ServiceRequest2")

// Salviamole su due nuove variabili
pm.environment.set("OldSR1SISS", SR1SISS);
pm.environment.set("OldSR2SISS", SR2SISS);
// Salviamole su due nuove variabili
pm.environment.set("OldServiceRequest1", ServiceRequest1);
pm.environment.set("OldServiceRequest2", ServiceRequest2);

// Definiamo una funzione per filtrare gli elementi che sono presenti in SR1SISS
// Funzione per filtrare gli elementi presenti in un array da un altro array
function filterOutFromArray(arr, toBeFilteredOut) {
    return arr.filter(item => !toBeFilteredOut.includes(item));
}
// Inizializza la nuova lista
let NewSISSCodeList = []
let NewserviceRequestList = []

// Verifichiamo se SR1SISS non è vuoto e se contiene valori
if (SR1SISS) {
    NewSISSCodeList = filterOutFromArray(SISSCodeList, SR1SISS);
    // Verifichiamo se SR2SISS non è vuoto e se contiene valori
    if (SR2SISS) {
        NewSISSCodeList = filterOutFromArray(NewSISSCodeList, SR2SISS);
    }
}

// Verifichiamo se ServiceRequest1 non è vuoto e se contiene valori
if (ServiceRequest1) {
    NewserviceRequestList = filterOutFromArray(serviceRequestList, ServiceRequest1);
    // Verifichiamo se ServiceRequest2 non è vuoto e se contiene valori
    if (ServiceRequest2) {
        NewserviceRequestList = filterOutFromArray(NewserviceRequestList, ServiceRequest2);
    }
}

console.log("SISSCodeList: " + SISSCodeList);
console.log("NewSISSCodeList: " + NewSISSCodeList);
console.log("serviceRequestList: " + serviceRequestList);
console.log("NewserviceRequestList: " + NewserviceRequestList);

// Genera un indice casuale per selezionare un valore dalla lista
const randomIndex = Math.floor(Math.random() * NewSISSCodeList.length);
let randomIndex2 = randomIndex;

// Ripeti il processo per la Service Request 2
while (randomIndex2 === randomIndex) {
  randomIndex2 = Math.floor(Math.random() * NewSISSCodeList.length);
}

// Seleziona il valore casuale dalla lista per la Service Request 1
const randomValue =  NewserviceRequestList[randomIndex] ;
const randomSISS =  NewSISSCodeList[randomIndex] ;

// Seleziona il valore casuale dalla lista per la Service Request 2
const randomValue2 =  NewserviceRequestList[randomIndex2] ;
const randomSISS2 =  NewSISSCodeList[randomIndex2] ;

// Assegna i valori casuali alle variabili delle Service Request
pm.environment.set("ServiceRequest1", randomValue);
pm.environment.set("SR1SISS", randomSISS);
pm.environment.set("ServiceRequest2", randomValue2);
pm.environment.set("SR2SISS", randomSISS2);

// Stampa le prestazioni richieste casualmente
console.log("Service Request 1 is:", randomValue, randomSISS, "; Service Request 2 is:", randomValue2, randomSISS2);

console.log("L1 code: ",pm.collectionVariables.get("L1code"), "L2 code: ",pm.collectionVariables.get("L2code"))
console.log("CodiceApplicativo: ",pm.collectionVariables.get("CodiceApplicativo"))

// Dichiara le variabili di ambiente L1 placer e L2 placer da utilizzare negli altri flussi per identificare il placer
pm.environment.set("L1codePlacer",L1code);
pm.environment.set("L2codePlacer",L2code);